export declare const Icon: import("../utils").WithInstall<import("vue").DefineComponent<{
    dot: BooleanConstructor;
    tag: {
        type: import("vue").PropType<keyof HTMLElementTagNameMap>;
        default: keyof HTMLElementTagNameMap;
    };
    name: StringConstructor;
    size: (NumberConstructor | StringConstructor)[];
    badge: (NumberConstructor | StringConstructor)[];
    color: StringConstructor;
    badgeProps: import("vue").PropType<Partial<{
        dot?: unknown;
        max?: unknown;
        tag?: unknown;
        color?: unknown;
        offset?: unknown;
        content?: unknown;
        showZero?: unknown;
        position?: unknown;
    } & {
        dot: boolean;
        tag: keyof HTMLElementTagNameMap;
        showZero: boolean;
        position: import("..").BadgePosition;
    } & {
        color?: string | undefined;
        max?: string | number | undefined;
        offset?: [string | number, string | number] | undefined;
        content?: string | number | undefined;
    }>>;
    classPrefix: StringConstructor;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    dot?: unknown;
    tag?: unknown;
    name?: unknown;
    size?: unknown;
    badge?: unknown;
    color?: unknown;
    badgeProps?: unknown;
    classPrefix?: unknown;
} & {
    dot: boolean;
    tag: keyof HTMLElementTagNameMap;
} & {
    color?: string | undefined;
    name?: string | undefined;
    badge?: string | number | undefined;
    size?: string | number | undefined;
    badgeProps?: Partial<{
        dot?: unknown;
        max?: unknown;
        tag?: unknown;
        color?: unknown;
        offset?: unknown;
        content?: unknown;
        showZero?: unknown;
        position?: unknown;
    } & {
        dot: boolean;
        tag: keyof HTMLElementTagNameMap;
        showZero: boolean;
        position: import("..").BadgePosition;
    } & {
        color?: string | undefined;
        max?: string | number | undefined;
        offset?: [string | number, string | number] | undefined;
        content?: string | number | undefined;
    }> | undefined;
    classPrefix?: string | undefined;
}>, {
    dot: boolean;
    tag: keyof HTMLElementTagNameMap;
}>>;
export default Icon;
export type { IconProps } from './Icon';
declare module 'vue' {
    interface GlobalComponents {
        VanIcon: typeof Icon;
    }
}
