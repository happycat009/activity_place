{"version":3,"file":"dropdown.vue_vue_type_script_lang.js","sources":["../../../../../../packages/components/dropdown/src/dropdown.vue"],"sourcesContent":["<template>\n  <div class=\"el-dropdown\">\n    <el-popper\n      ref=\"triggerVnode\"\n      v-model:visible=\"visible\"\n      :placement=\"placement\"\n      :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n      :effect=\"effect\"\n      pure\n      :manual-mode=\"true\"\n      :trigger=\"[trigger]\"\n      :popper-class=\"`el-dropdown__popper ${popperClass}`\"\n      append-to-body\n      transition=\"el-zoom-in-top\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n    >\n      <template #default>\n        <el-scrollbar\n          ref=\"scrollbar\"\n          tag=\"ul\"\n          :wrap-style=\"wrapStyle\"\n          view-class=\"el-dropdown__list\"\n        >\n          <slot name=\"dropdown\"></slot>\n        </el-scrollbar>\n      </template>\n      <template #trigger>\n        <div :class=\"[dropdownSize ? 'el-dropdown--' + dropdownSize : '']\">\n          <slot v-if=\"!splitButton\" name=\"default\"></slot>\n          <template v-else>\n            <el-button-group>\n              <el-button\n                :size=\"dropdownSize\"\n                :type=\"type\"\n                @click=\"handlerMainButtonClick\"\n              >\n                <slot name=\"default\"></slot>\n              </el-button>\n              <el-button\n                :size=\"dropdownSize\"\n                :type=\"type\"\n                class=\"el-dropdown__caret-button\"\n              >\n                <el-icon class=\"el-dropdown__icon\"><arrow-down /></el-icon>\n              </el-button>\n            </el-button-group>\n          </template>\n        </div>\n      </template>\n    </el-popper>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  provide,\n  getCurrentInstance,\n  ref,\n  computed,\n  watch,\n  onMounted,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElPopper, { Effect } from '@element-plus/components/popper'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElIcon from '@element-plus/components/icon'\nimport { on, addClass, removeClass } from '@element-plus/utils/dom'\nimport { addUnit } from '@element-plus/utils/util'\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { useSize } from '@element-plus/hooks'\n\nimport type { Placement } from '@element-plus/components/popper'\nimport type { PropType, ComponentPublicInstance, CSSProperties } from 'vue'\nimport type { TriggerType } from '@element-plus/hooks/use-popper/use-target-events'\nimport type { ButtonType } from '@element-plus/components/button/src/types'\n\ntype Nullable<T> = null | T\nconst { ButtonGroup: ElButtonGroup } = ElButton\n\nexport default defineComponent({\n  name: 'ElDropdown',\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElPopper,\n    ElIcon,\n    ArrowDown,\n  },\n  props: {\n    trigger: {\n      type: String as PropType<TriggerType | 'contextmenu'>,\n      default: 'hover',\n    },\n    type: String as PropType<ButtonType>,\n    size: {\n      type: String,\n      default: '',\n    },\n    splitButton: Boolean,\n    hideOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom',\n    },\n    showTimeout: {\n      type: Number,\n      default: 150,\n    },\n    hideTimeout: {\n      type: Number,\n      default: 150,\n    },\n    tabindex: {\n      type: [Number, String],\n      default: 0,\n    },\n    effect: {\n      type: String as PropType<Effect>,\n      default: Effect.LIGHT,\n    },\n    maxHeight: {\n      type: [Number, String],\n      default: '',\n    },\n    popperClass: {\n      type: String,\n      default: '',\n    },\n  },\n  emits: ['visible-change', 'click', 'command'],\n  setup(props, { emit }) {\n    const _instance = getCurrentInstance()\n\n    const timeout = ref<Nullable<number>>(null)\n\n    const visible = ref(false)\n    const scrollbar = ref(null)\n    const wrapStyle = computed<CSSProperties>(() => ({\n      maxHeight: addUnit(props.maxHeight),\n    }))\n\n    watch(\n      () => visible.value,\n      (val) => {\n        if (val) triggerElmFocus()\n        if (!val) triggerElmBlur()\n        emit('visible-change', val)\n      }\n    )\n\n    const focusing = ref(false)\n    watch(\n      () => focusing.value,\n      (val) => {\n        const selfDefine = triggerElm.value\n        if (selfDefine) {\n          if (val) {\n            addClass(selfDefine, 'focusing')\n          } else {\n            removeClass(selfDefine, 'focusing')\n          }\n        }\n      }\n    )\n\n    const triggerVnode = ref<Nullable<ComponentPublicInstance>>(null)\n    const triggerElm = computed<Nullable<HTMLButtonElement>>(() => {\n      const _: any = (triggerVnode.value?.$refs.triggerRef as HTMLElement)\n        ?.children[0]\n      return !props.splitButton ? _ : _?.children?.[1]\n    })\n\n    function handleClick() {\n      if (triggerElm.value?.disabled) return\n      if (visible.value) {\n        hide()\n      } else {\n        show()\n      }\n    }\n\n    function show() {\n      if (triggerElm.value?.disabled) return\n      timeout.value && clearTimeout(timeout.value)\n      timeout.value = window.setTimeout(\n        () => {\n          visible.value = true\n        },\n        ['click', 'contextmenu'].includes(props.trigger) ? 0 : props.showTimeout\n      )\n    }\n\n    function hide() {\n      if (triggerElm.value?.disabled) return\n      removeTabindex()\n      if (props.tabindex >= 0) {\n        resetTabindex(triggerElm.value)\n      }\n      clearTimeout(timeout.value)\n      timeout.value = window.setTimeout(\n        () => {\n          visible.value = false\n        },\n        ['click', 'contextmenu'].includes(props.trigger) ? 0 : props.hideTimeout\n      )\n    }\n\n    function removeTabindex() {\n      triggerElm.value?.setAttribute('tabindex', '-1')\n    }\n\n    function resetTabindex(ele) {\n      removeTabindex()\n      ele?.setAttribute('tabindex', '0')\n    }\n\n    function triggerElmFocus() {\n      triggerElm.value?.focus?.()\n    }\n\n    function triggerElmBlur() {\n      triggerElm.value?.blur?.()\n    }\n\n    const dropdownSize = useSize()\n\n    function commandHandler(...args) {\n      emit('command', ...args)\n    }\n\n    provide('elDropdown', {\n      instance: _instance,\n      dropdownSize,\n      visible,\n      handleClick,\n      commandHandler,\n      show,\n      hide,\n      trigger: computed(() => props.trigger),\n      hideOnClick: computed(() => props.hideOnClick),\n      triggerElm,\n    })\n\n    onMounted(() => {\n      if (!props.splitButton) {\n        on(triggerElm.value, 'focus', () => {\n          focusing.value = true\n        })\n        on(triggerElm.value, 'blur', () => {\n          focusing.value = false\n        })\n        on(triggerElm.value, 'click', () => {\n          focusing.value = false\n        })\n      }\n      if (props.trigger === 'hover') {\n        on(triggerElm.value, 'mouseenter', show)\n        on(triggerElm.value, 'mouseleave', hide)\n      } else if (props.trigger === 'click') {\n        on(triggerElm.value, 'click', handleClick)\n      } else if (props.trigger === 'contextmenu') {\n        on(triggerElm.value, 'contextmenu', (e) => {\n          e.preventDefault()\n          handleClick()\n        })\n      }\n\n      Object.assign(_instance, {\n        handleClick,\n        hide,\n        resetTabindex,\n      })\n    })\n\n    const handlerMainButtonClick = (event) => {\n      emit('click', event)\n      hide()\n    }\n\n    return {\n      visible,\n      scrollbar,\n      wrapStyle,\n      dropdownSize,\n      handlerMainButtonClick,\n      triggerVnode,\n    }\n  },\n})\n</script>\n"],"names":["ElButton","ElIcon","Effect","watch","removeClass","provide","computed","on"],"mappings":"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"}