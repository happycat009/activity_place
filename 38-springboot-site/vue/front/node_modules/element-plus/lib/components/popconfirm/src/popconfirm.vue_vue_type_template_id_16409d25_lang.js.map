{"version":3,"file":"popconfirm.vue_vue_type_template_id_16409d25_lang.js","sources":["../../../../../../packages/components/popconfirm/src/popconfirm.vue?vue&type=template&id=16409d25&lang.js"],"sourcesContent":["<template>\n  <el-popper\n    v-model:visible=\"visible\"\n    trigger=\"click\"\n    :effect=\"Effect.LIGHT\"\n    popper-class=\"el-popover\"\n    append-to-body\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n  >\n    <div class=\"el-popconfirm\">\n      <div class=\"el-popconfirm__main\">\n        <el-icon\n          v-if=\"!hideIcon && icon\"\n          class=\"el-popconfirm__icon\"\n          :style=\"{ color: iconColor }\"\n        >\n          <component :is=\"icon\" />\n        </el-icon>\n        {{ title }}\n      </div>\n      <div class=\"el-popconfirm__action\">\n        <el-button size=\"small\" :type=\"cancelButtonType\" @click=\"cancel\">\n          {{ finalCancelButtonText }}\n        </el-button>\n        <el-button size=\"small\" :type=\"confirmButtonType\" @click=\"confirm\">\n          {{ finalConfirmButtonText }}\n        </el-button>\n      </div>\n    </div>\n    <template #trigger>\n      <slot name=\"reference\"></slot>\n    </template>\n  </el-popper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed } from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElIcon from '@element-plus/components/icon'\nimport ElPopper, { Effect } from '@element-plus/components/popper'\nimport { useLocale } from '@element-plus/hooks'\nimport { popconfirmProps, popconfirmEmits } from './popconfirm'\n\nexport default defineComponent({\n  name: 'ElPopconfirm',\n\n  components: {\n    ElButton,\n    ElPopper,\n    ElIcon,\n  },\n\n  props: popconfirmProps,\n  emits: popconfirmEmits,\n\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const visible = ref(false)\n    const confirm = () => {\n      if (visible.value) {\n        emit('confirm')\n      }\n      visible.value = false\n    }\n    const cancel = () => {\n      if (visible.value) {\n        emit('cancel')\n      }\n      visible.value = false\n    }\n    const finalConfirmButtonText = computed(\n      () => props.confirmButtonText || t('el.popconfirm.confirmButtonText')\n    )\n    const finalCancelButtonText = computed(\n      () => props.cancelButtonText || t('el.popconfirm.cancelButtonText')\n    )\n\n    return {\n      Effect,\n      visible,\n\n      finalConfirmButtonText,\n      finalCancelButtonText,\n\n      confirm,\n      cancel,\n    }\n  },\n})\n</script>\n"],"names":["_createElementVNode","_toDisplayString"],"mappings":";;;;;;;qBASS,KAAK,EAAC;qBACJ,KAAK,EAAC;4CAUuB;;;;;;;;IAlB5B;;IACR;IACC;;IAED,qBAAA;;;IAuBW,OAAO,cAChB;MAAAA;;;;;YAlBW;;;;;;;oCAIPC;;;;;;;;;;;YAKgD;;;;;;;;;;YAGC;;;;;;;;;;;"}