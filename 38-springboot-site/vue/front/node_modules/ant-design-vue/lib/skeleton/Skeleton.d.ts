import type { ExtractPropTypes, PropType } from 'vue';
import type { AvatarProps } from './Avatar';
declare type SkeletonAvatarProps = Omit<AvatarProps, 'active'>;
export declare const skeletonProps: {
    active: {
        type: BooleanConstructor;
        default: any;
    };
    loading: {
        type: BooleanConstructor;
        default: any;
    };
    prefixCls: StringConstructor;
    avatar: {
        type: PropType<boolean | SkeletonAvatarProps>;
        default: boolean | SkeletonAvatarProps;
    };
    title: {
        type: PropType<boolean | Partial<{
            prefixCls?: unknown;
            width?: unknown;
        } & {} & {
            width?: string | number;
            prefixCls?: string;
        }>>;
        default: boolean | Partial<{
            prefixCls?: unknown;
            width?: unknown;
        } & {} & {
            width?: string | number;
            prefixCls?: string;
        }>;
    };
    paragraph: {
        type: PropType<boolean | Partial<{
            prefixCls?: unknown;
            width?: unknown;
            rows?: unknown;
        } & {} & {
            width?: (string | number) | (string | number)[];
            prefixCls?: string;
            rows?: number;
        }>>;
        default: boolean | Partial<{
            prefixCls?: unknown;
            width?: unknown;
            rows?: unknown;
        } & {} & {
            width?: (string | number) | (string | number)[];
            prefixCls?: string;
            rows?: number;
        }>;
    };
    round: {
        type: BooleanConstructor;
        default: any;
    };
};
export declare type SkeletonProps = Partial<ExtractPropTypes<typeof skeletonProps>>;
declare const Skeleton: import("vue").DefineComponent<{
    active: {
        type: BooleanConstructor;
        default: any;
    };
    loading: {
        type: BooleanConstructor;
        default: any;
    };
    prefixCls: StringConstructor;
    avatar: {
        type: PropType<boolean | SkeletonAvatarProps>;
        default: boolean | SkeletonAvatarProps;
    };
    title: {
        type: PropType<boolean | Partial<{
            prefixCls?: unknown;
            width?: unknown;
        } & {} & {
            width?: string | number;
            prefixCls?: string;
        }>>;
        default: boolean | Partial<{
            prefixCls?: unknown;
            width?: unknown;
        } & {} & {
            width?: string | number;
            prefixCls?: string;
        }>;
    };
    paragraph: {
        type: PropType<boolean | Partial<{
            prefixCls?: unknown;
            width?: unknown;
            rows?: unknown;
        } & {} & {
            width?: (string | number) | (string | number)[];
            prefixCls?: string;
            rows?: number;
        }>>;
        default: boolean | Partial<{
            prefixCls?: unknown;
            width?: unknown;
            rows?: unknown;
        } & {} & {
            width?: (string | number) | (string | number)[];
            prefixCls?: string;
            rows?: number;
        }>;
    };
    round: {
        type: BooleanConstructor;
        default: any;
    };
}, () => JSX.Element | import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    active?: unknown;
    loading?: unknown;
    prefixCls?: unknown;
    avatar?: unknown;
    title?: unknown;
    paragraph?: unknown;
    round?: unknown;
} & {
    title: boolean | Partial<{
        prefixCls?: unknown;
        width?: unknown;
    } & {} & {
        width?: string | number;
        prefixCls?: string;
    }>;
    avatar: boolean | SkeletonAvatarProps;
    paragraph: boolean | Partial<{
        prefixCls?: unknown;
        width?: unknown;
        rows?: unknown;
    } & {} & {
        width?: (string | number) | (string | number)[];
        prefixCls?: string;
        rows?: number;
    }>;
} & {
    prefixCls?: string;
    round?: boolean;
    active?: boolean;
    loading?: boolean;
}>, {
    title: boolean | Partial<{
        prefixCls?: unknown;
        width?: unknown;
    } & {} & {
        width?: string | number;
        prefixCls?: string;
    }>;
    round: boolean;
    active: boolean;
    loading: boolean;
    avatar: boolean | SkeletonAvatarProps;
    paragraph: boolean | Partial<{
        prefixCls?: unknown;
        width?: unknown;
        rows?: unknown;
    } & {} & {
        width?: (string | number) | (string | number)[];
        prefixCls?: string;
        rows?: number;
    }>;
}>;
export default Skeleton;
