import type { ExtractPropTypes, PropType } from 'vue';
declare type widthUnit = number | string;
export declare const skeletonParagraphProps: {
    prefixCls: StringConstructor;
    width: {
        type: PropType<widthUnit | widthUnit[]>;
    };
    rows: NumberConstructor;
};
export declare type SkeletonParagraphProps = Partial<ExtractPropTypes<typeof skeletonParagraphProps>>;
declare const SkeletonParagraph: import("vue").DefineComponent<{
    prefixCls: StringConstructor;
    width: {
        type: PropType<widthUnit | widthUnit[]>;
    };
    rows: NumberConstructor;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    prefixCls?: unknown;
    width?: unknown;
    rows?: unknown;
} & {} & {
    width?: widthUnit | widthUnit[];
    prefixCls?: string;
    rows?: number;
}>, {}>;
export default SkeletonParagraph;
