import type { GenerateConfig } from '../../generate';
import type { Locale, OnSelect } from '../../interface';
import type { SharedTimeProps } from '.';
import type { Ref } from 'vue';
export declare type BodyOperationRef = {
    onUpDown: (diff: number) => void;
};
export declare type TimeBodyProps<DateType> = {
    prefixCls: string;
    locale: Locale;
    generateConfig: GenerateConfig<DateType>;
    value?: DateType | null;
    onSelect: OnSelect<DateType>;
    activeColumnIndex: number;
    operationRef: Ref<BodyOperationRef | undefined>;
} & SharedTimeProps<DateType>;
declare const TimeBody: import("vue").DefineComponent<Readonly<{
    onSelect?: any;
    prefixCls?: any;
    generateConfig?: any;
    operationRef?: any;
    value?: any;
    hideDisabledOptions?: any;
    activeColumnIndex?: any;
    showHour?: any;
    showMinute?: any;
    showSecond?: any;
    use12Hours?: any;
    hourStep?: any;
    minuteStep?: any;
    secondStep?: any;
    disabledHours?: any;
    disabledMinutes?: any;
    disabledSeconds?: any;
}>, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    readonly onSelect?: unknown;
    readonly prefixCls?: unknown;
    readonly generateConfig?: unknown;
    readonly operationRef?: unknown;
    readonly value?: unknown;
    readonly hideDisabledOptions?: unknown;
    readonly activeColumnIndex?: unknown;
    readonly showHour?: unknown;
    readonly showMinute?: unknown;
    readonly showSecond?: unknown;
    readonly use12Hours?: unknown;
    readonly hourStep?: unknown;
    readonly minuteStep?: unknown;
    readonly secondStep?: unknown;
    readonly disabledHours?: unknown;
    readonly disabledMinutes?: unknown;
    readonly disabledSeconds?: unknown;
} & {
    onSelect: any;
    prefixCls: any;
    generateConfig: any;
    operationRef: any;
    value: any;
    hideDisabledOptions: any;
    activeColumnIndex: any;
    showHour: any;
    showMinute: any;
    showSecond: any;
    use12Hours: any;
    hourStep: any;
    minuteStep: any;
    secondStep: any;
    disabledHours: any;
    disabledMinutes: any;
    disabledSeconds: any;
} & {}>, {
    onSelect: any;
    prefixCls: any;
    generateConfig: any;
    operationRef: any;
    value: any;
    hideDisabledOptions: any;
    activeColumnIndex: any;
    showHour: any;
    showMinute: any;
    showSecond: any;
    use12Hours: any;
    hourStep: any;
    minuteStep: any;
    secondStep: any;
    disabledHours: any;
    disabledMinutes: any;
    disabledSeconds: any;
}>;
export default TimeBody;
